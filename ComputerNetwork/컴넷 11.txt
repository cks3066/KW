Tunneling
: IPv4와 IPv6의 혼용에서 쓰임

logical view:
		IPv4 tunnel
A	B	connecting IPv6 routers		E	F
IPv6	IPv6		     ->			IPv6	IPv6

physical view:		C	D
			IPv4	IPv4	

패킷 내에  터널링할 대상을 캡슐화시켜 목적지까지 전송
	
보안에서 많이 쓰인다.

하나의 데이터그램을 다른 포맷으로 넣어서 전달하는 것


5장
라우팅 프로토콜(가장 중요)

라우팅프로토콜이란 말을 많이 들어봤을거입니다.
라우팅 프로토콜의 목적은 세가지 목적이 있습니다.
- 경로 유무 	path finding
- 경로		path determination
- 경로 선택 	path selection


라우팅 알고리즘
- 네트워크를 통해 정보 이동시, 최적의경로를 결정하기 위한 방식
네트워크 토폴로지에 대한 정보를 인풋으로 받아서 라우팅 테이블을 아웃풋으로 만들어내는것

	input				output
네트워크 토폴로지 정보 -> 라우팅 알고리즘 -> 라우팅 테이블


네트워크 토폴로지 정보가 global information이냐 partial(decentralized) information.

global > link state 알고리즘 [OSPF]
partial > distance vector 알고리즘 [RIP]
--------------------------------------------------
distance vector 알고리즘 - belman ford 알고리즘
link state 알고리즘 - dijkstra 알고리즘, OSPF, complete information

------------------------------
distance table채우기

distance vecter (partial 인포메이션[벨만 포드 알고리즘])

D^E()	A	B	D	[E에서 나가는 방향]		라우팅 테이블
A	1	14	5				ㄱ.1

B	7	8	5				ㄷ.5

C	6	9	4				ㄷ.4

D	4	11	2				ㄷ.2

D^E(A,B)  = E에서 목적지 B 까지 가는 거리 + B에서 A가는 최솟값]
D^E(C,D)  = E에서 목적지 D 까지 가는 거리 + D에서 C까지 가는 최솟값]

------------
link state (global 인포메이션[다익스트라 알고리즘])

step	startN		D(B),p(B)	d(C),p(C),	D(D),p(D), D(E),p(E)	D(F),p(F)		라우팅 테이블
0	A		2.A	5.A	1.A	infinity	infinity		B	ㄱ.2
1	AD		2.A	4.D		2.D	infinity		C	ㄴ.3
2	ADE		2.A	3.E			4.E		D	ㄴ.2		
3	ADEB			3.E			4.E		E	ㄴ.2
4	ADEBC						4.E		F	ㄴ.4
5	ADEBDF							


distance vector 알고리즘이 좀 더 converge 되는 시간이 많이 걸린다.
하지만 link state 는 prepare 시간이 많이 걸린다.

네트워크 크기가 크게 되면 link state가 더 빠를 수 있다.

변화가 잦은 경우 distance vector가 유리하다.

